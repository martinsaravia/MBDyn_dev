%==========================================================================
%                           FUNCIONES SECCIONALES
%
% NOTES: j is the section indicator (Location on FE), and count is the location in matrix D
%==========================================================================

function [X,D,DM,wf,E,count]=sectbeam(X,FE,D,DM,E,count,j)

FE.sec(2*secid-1,1:7) = { secid  secname  'BEAM'   setname  seclaw   secmat   seclam } ;

I0 = zeros(3,3);

%-------------------------------------------------------------------------------------------------------------------------------------     
     nidx=j*2-1;                      didx=j*2;                    secfile = strcat(FE.sec{nidx,5},'.txt');
     matid = FE.sec{nidx,6};          lamid=FE.sec{nidx,7};        shape=dlmread(secfile,'\t');                 sectlaw=FE.sec{nidx,5};
     thick=FE.sec{didx,1};            scaley=FE.sec{didx,2}(1);    scalez=FE.sec{didx,2}(2);
%-------------------------------------------------------------------------------------------------------------------------------------          
     setname = FE.sec{nidx,4};    
     setidx = strmatch(setname,X.elset(:,1),'exact');  
     setels = [X.elset{setidx,2}];
%-------------------------------------------------------------------------------------------------------------------------------------      
%% ==========================================================================
%                                 SECTION LAW 
%==========================================================================
    if strcmp(sectlaw,'EPT')==1
      [C,rhon] = laminateEPT(FE,lamid,matid,thick);
    end
    if strcmp(sectlaw,'EPS')==1
       [C,rhon] = laminateEPS(FE,lamid,matid,thick);
    end
    
    % REORDENO LA CONSTITUTIVA DEL LAMINADO PORQUE CON LA FORMULACION CONSTITUTIVA
    % NUEVA EL ORDENAMIENTO ES DISTINTO AL QUE HABIA IMPLEMENTADO PRIMERO SEGUN TULIO

    C11=C(1,1); C12=C(1,2);               C14=C(1,4);  C15=C(1,5);   
                C22=C(2,2);               C24=C(2,4);  C25=C(2,5); 
                              C33=0*C(3,3);   
                                          C44=C(4,4);  C45=C(4,5); 
                                                       C55=C(5,5); 

%% ==========================================================================
%                 GENERAL SECTION FROM TXT FILE
%=========================================================================
    
    puntos=length(shape(:,1));  %agrego la primer fila al final de la lista para que cierre la seccion
    
    s0=0;  J = zeros(3,3); asect=0; 
    
    %-----------------------------------------------------------
    %           EVALUO LA POSICION DEL CENTROIDE    
    %-----------------------------------------------------------
    areat=0; Qy=0; Qz=0;
    
    for i=1:puntos-1
        y0=shape(i,1);         y1=shape(i+1,1);     z0=shape(i,2) ;    z1=shape(i+1,2);
        Dy=y1-y0;              Dz=z1-z0;       Ds=sqrt( (Dy)^2 + (Dz)^2 );
        areai = thick*Ds;      areat = areai + areat;
        Qy = areai*(y0+y1)/2 + Qy ;   Qz = areai*(z0+z1)/2 + Qz ;  % Momentos Estaticos
    end
    
    % Centroide
    YC = Qy/areat;    ZC = Qz/areat;
    % Llevo los nuevos ejes al centroide y  Escalo la sección
    shape(:,1) = ( shape(:,1) - YC ) * scaley;
    shape(:,2) = ( shape(:,2) - ZC ) * scalez;  
    
    
    %-----------------------------------------------------------
    %           MATRICES SECCIONALES D Y DM   
    %-----------------------------------------------------------     
   
    D(:,:,count) = zeros(9,9);
    
    for i=1:puntos-1
         
        y0=shape(i,1) ;         y1=shape(i+1,1);       z0=shape(i,2)   ;    z1=shape(i+1,2);
        Dy=y1-y0     ;          Dz=z1-z0;
        Ds=sqrt( Dy^2 + Dz^2 ); s1=s0+Ds;
        dYs=Dy/Ds;  dZs=Dz/Ds;
                
        r0 = sqrt(y0^2+z0^2);   r1 = sqrt(y1^2+z1^2);  spr = 0.5*(Ds+r0+r1);
        asect = sqrt(spr*(spr-Ds)*(spr-r0)*(spr-r1)) + asect;  % Formula de Heron para area de triangulo en funcion de sus lados

        D(:,:,count) = [C11*(-s0 + s1)           -((s0 - s1)*(2*C14*Dy + C11*(Dz*(-s0 + s1) + ...
            2*Ds*z0)))/(2*Ds)           ((s0 - s1)*(2*C14*Dz + C11*(Dy*(s0 - s1) - ...
            2*Ds*y0)))/(2*Ds)           (C12*Dy*(-s0 + s1))/Ds           (C12*Dz*(-s0 + s1))/Ds           ((s0 ...
            - s1)*(C15*(Dy^2 + Dz^2) + C12*Ds*(-(Dz*y0) + Dy*z0)))/Ds^2           ((s0 - ...
            s1)*(-(Dy*(3*C14*Dz + C11*Dy*(s0 - s1))*(s0 - s1)) + 3*Ds*(2*C14*Dz + ...
            C11*Dy*(s0 - s1))*y0 - 3*C11*Ds^2*y0^2))/(6*Ds^2)           ((s0 - s1)*(Dz*(s0 ...
            - s1)*(3*C14*Dy + C11*Dz*(-s0 + s1)) - 3*Ds*(2*C14*Dy + C11*Dz*(-s0 + ...
            s1))*z0 - 3*C11*Ds^2*z0^2))/(6*Ds^2)           -((s0 - s1)*(C11*Dz*(s0 - ...
            s1)*(2*Dy*(s0 - s1) - 3*Ds*y0) + 3*C11*Ds*(Dy*(-s0 + s1) + ...
            2*Ds*y0)*z0 + 3*C14*(Dy^2*(-s0 + s1) + 2*Ds*Dy*y0 + Dz*(Dz*s0 - Dz*s1 ...
            - 2*Ds*z0))))/(6*Ds^2);

            -((s0 - s1)*(2*C14*Dy + C11*(Dz*(-s0 + s1) + 2*Ds*z0)))/(2*Ds)           -((s0 ...
            - s1)*(3*C44*Dy^2 + Dz*(-3*C14*Dy + C11*Dz*(s0 - s1))*(s0 - s1) + ...
            3*Ds*(2*C14*Dy + C11*Dz*(-s0 + s1))*z0 + ...
            3*C11*Ds^2*z0^2))/(3*Ds^2)           ((s0 - s1)*(6*C44*Dy*Dz - C11*Dz*(s0 - ...
            s1)*(2*Dy*(s0 - s1) - 3*Ds*y0) - 3*C11*Ds*(Dy*(-s0 + s1) + ...
            2*Ds*y0)*z0 + 3*C14*(Dy^2*(s0 - s1) - 2*Ds*Dy*y0 + Dz*(-(Dz*s0) + ...
            Dz*s1 + 2*Ds*z0))))/(6*Ds^2)           -(Dy*(s0 - s1)*(2*C24*Dy + C12*(Dz*(-s0 ...
            + s1) + 2*Ds*z0)))/(2*Ds^2)           -(Dz*(s0 - s1)*(2*C24*Dy + C12*(Dz*(-s0 + ...
            s1) + 2*Ds*z0)))/(2*Ds^2)           ((s0 - s1)*(2*C45*Dy*(Dy^2 + Dz^2) - ...
            C15*(Dy^2 + Dz^2)*(Dz*s0 - Dz*s1 - 2*Ds*z0) + Ds*(2*C24*Dy - ...
            C12*Dz*s0 + C12*Dz*s1 + 2*C12*Ds*z0)*(-(Dz*y0) + ...
            Dy*z0)))/(2*Ds^3)           ((s0 - s1)*(12*C44*Dy*Dz*(Dy*(-s0 + s1) + 2*Ds*y0) ...
            + C11*Dz*(s0 - s1)*(3*Dy^2*(s0 - s1)^2 + 8*Ds*Dy*(-s0 + s1)*y0 + ...
            6*Ds^2*y0^2) - 4*C11*Ds*(Dy^2*(s0 - s1)^2 + 3*Ds*Dy*(-s0 + s1)*y0 + ...
            3*Ds^2*y0^2)*z0 + 4*C14*(-(Dy^3*(s0 - s1)^2) + 3*Ds*Dy^2*(s0 - s1)*y0 ...
            + 3*Ds*Dz*y0*(-(Dz*s0) + Dz*s1 + 2*Ds*z0) + Dy*(-3*Ds^2*y0^2 + Dz*(s0 ...
            - s1)*(2*Dz*s0 - 2*Dz*s1 - 3*Ds*z0)))))/(24*Ds^3)           ((s0 - ...
            s1)*(Dz^2*(-4*C14*Dy + C11*Dz*(s0 - s1))*(s0 - s1)^2 + 4*Ds*Dz*(s0 - ...
            s1)*(3*C14*Dy + C11*Dz*(-s0 + s1))*z0 - 6*Ds^2*(2*C14*Dy + ...
            C11*Dz*(-s0 + s1))*z0^2 - 4*C11*Ds^3*z0^3 + 4*C44*Dy^2*(Dz*(s0 - s1) ...
            - 2*Ds*z0)))/(8*Ds^3)           -((s0 - s1)*(Dz*(s0 - s1)*(C11*Dz*(s0 - ...
            s1)*(-3*Dy*s0 + 3*Dy*s1 + 4*Ds*y0) + 4*C14*((2*Dy^2 - Dz^2)*(s0 - s1) ...
            - 3*Ds*Dy*y0)) + 4*Ds*(-3*C14*(Dy - Dz)*(Dy + Dz)*(s0 - s1) + ...
            6*C14*Ds*Dy*y0 + C11*Dz*(s0 - s1)*(2*Dy*s0 - 2*Dy*s1 - 3*Ds*y0))*z0 + ...
            6*Ds^2*(-2*C14*Dz + C11*(-(Dy*s0) + Dy*s1 + 2*Ds*y0))*z0^2 + ...
            6*C44*Dy*(Dy^2*(-s0 + s1) + 2*Ds*Dy*y0 + Dz*(Dz*s0 - Dz*s1 - ...
            2*Ds*z0))))/(12*Ds^3);

            ((s0 - s1)*(2*C14*Dz + C11*(Dy*(s0 - s1) - 2*Ds*y0)))/(2*Ds)           ((s0 - ...
            s1)*(6*C44*Dy*Dz - C11*Dz*(s0 - s1)*(2*Dy*(s0 - s1) - 3*Ds*y0) - ...
            3*C11*Ds*(Dy*(-s0 + s1) + 2*Ds*y0)*z0 + 3*C14*(Dy^2*(s0 - s1) - ...
            2*Ds*Dy*y0 + Dz*(-(Dz*s0) + Dz*s1 + 2*Ds*z0))))/(6*Ds^2)           -((s0 - ...
            s1)*(3*C44*Dz^2 + Dy*(3*C14*Dz + C11*Dy*(s0 - s1))*(s0 - s1) - ...
            3*Ds*(2*C14*Dz + C11*Dy*(s0 - s1))*y0 + ...
            3*C11*Ds^2*y0^2))/(3*Ds^2)           (Dy*(s0 - s1)*(2*C24*Dz + C12*(Dy*(s0 - ...
            s1) - 2*Ds*y0)))/(2*Ds^2)           (Dz*(s0 - s1)*(2*C24*Dz + C12*(Dy*(s0 - s1) ...
            - 2*Ds*y0)))/(2*Ds^2)           -((s0 - s1)*(2*C45*Dz*(Dy^2 + Dz^2) + C15*(Dy^2 ...
            + Dz^2)*(Dy*s0 - Dy*s1 - 2*Ds*y0) + Ds*(-2*C24*Dz - C12*Dy*s0 + ...
            C12*Dy*s1 + 2*C12*Ds*y0)*(Dz*y0 - Dy*z0)))/(2*Ds^3)           ((s0 - ...
            s1)*(Dy*(4*C44*Dz^2 + Dy*(4*C14*Dz + C11*Dy*(s0 - s1))*(s0 - s1))*(s0 ...
            - s1) - 4*Ds*(2*C44*Dz^2 + Dy*(3*C14*Dz + C11*Dy*(s0 - s1))*(s0 - ...
            s1))*y0 + 6*Ds^2*(2*C14*Dz + C11*Dy*(s0 - s1))*y0^2 - ...
            4*C11*Ds^3*y0^3))/(8*Ds^3)           ((s0 - s1)*(Dz*(s0 - s1)*((4*C14*(-2*Dy^2 ...
            + Dz^2) + 3*C11*Dy*Dz*(s0 - s1))*(s0 - s1) + 4*Ds*(3*C14*Dy + ...
            C11*Dz*(-s0 + s1))*y0) - 4*Ds*(-3*C14*(Dy - Dz)*(Dy + Dz)*(s0 - s1) + ...
            6*C14*Ds*Dy*y0 + C11*Dz*(s0 - s1)*(2*Dy*s0 - 2*Dy*s1 - 3*Ds*y0))*z0 + ...
            6*Ds^2*(2*C14*Dz + C11*(Dy*s0 - Dy*s1 - 2*Ds*y0))*z0^2 + ...
            12*C44*Dy*Dz*(Dz*(-s0 + s1) + 2*Ds*z0)))/(24*Ds^3)           -((s0 - ...
            s1)*(C11*Dz*(s0 - s1)*(-3*Dy^2*(s0 - s1)^2 + 8*Ds*Dy*(s0 - s1)*y0 - ...
            6*Ds^2*y0^2) + 4*C11*Ds*(Dy^2*(s0 - s1)^2 + 3*Ds*Dy*(-s0 + s1)*y0 + ...
            3*Ds^2*y0^2)*z0 - 6*C44*Dz*(Dy^2*(-s0 + s1) + 2*Ds*Dy*y0 + Dz*(Dz*s0 ...
            - Dz*s1 - 2*Ds*z0)) + 4*C14*(Dy^3*(s0 - s1)^2 + 3*Ds*Dy^2*(-s0 + ...
            s1)*y0 - 3*Ds*Dz*y0*(-(Dz*s0) + Dz*s1 + 2*Ds*z0) + Dy*(3*Ds^2*y0^2 + ...
            Dz*(s0 - s1)*(-2*Dz*s0 + 2*Dz*s1 + 3*Ds*z0)))))/(12*Ds^3);

            (C12*Dy*(-s0 + s1))/Ds           -(Dy*(s0 - s1)*(2*C24*Dy + C12*(Dz*(-s0 + s1) ...
            + 2*Ds*z0)))/(2*Ds^2)           (Dy*(s0 - s1)*(2*C24*Dz + C12*(Dy*(s0 - s1) - ...
            2*Ds*y0)))/(2*Ds^2)           -(((C22*Dy^2 + C33*Dz^2)*(s0 - s1))/Ds^2)           -(((C22 ...
            - C33)*Dy*Dz*(s0 - s1))/Ds^2)           ((s0 - s1)*(2*C25*Dy*(Dy^2 + Dz^2) + ...
            2*C22*Ds*Dy*(-(Dz*y0) + Dy*z0) + C33*Dz*(Dy^2*(-s0 + s1) + 2*Ds*Dy*y0 ...
            + Dz*(-(Dz*s0) + Dz*s1 + 2*Ds*z0))))/(2*Ds^3)           (Dy*(s0 - ...
            s1)*(-(Dy*(3*C24*Dz + C12*Dy*(s0 - s1))*(s0 - s1)) + 3*Ds*(2*C24*Dz + ...
            C12*Dy*(s0 - s1))*y0 - 3*C12*Ds^2*y0^2))/(6*Ds^3)           (Dy*(s0 - ...
            s1)*(Dz*(s0 - s1)*(3*C24*Dy + C12*Dz*(-s0 + s1)) - 3*Ds*(2*C24*Dy + ...
            C12*Dz*(-s0 + s1))*z0 - 3*C12*Ds^2*z0^2))/(6*Ds^3)           -(Dy*(s0 - ...
            s1)*(C12*Dz*(s0 - s1)*(2*Dy*(s0 - s1) - 3*Ds*y0) + 3*C12*Ds*(Dy*(-s0 ...
            + s1) + 2*Ds*y0)*z0 + 3*C24*(Dy^2*(-s0 + s1) + 2*Ds*Dy*y0 + Dz*(Dz*s0 ...
            - Dz*s1 - 2*Ds*z0))))/(6*Ds^3);

            (C12*Dz*(-s0 + s1))/Ds           -(Dz*(s0 - s1)*(2*C24*Dy + C12*(Dz*(-s0 + s1) ...
            + 2*Ds*z0)))/(2*Ds^2)           (Dz*(s0 - s1)*(2*C24*Dz + C12*(Dy*(s0 - s1) - ...
            2*Ds*y0)))/(2*Ds^2)           -(((C22 - C33)*Dy*Dz*(s0 - ...
            s1))/Ds^2)           -(((C33*Dy^2 + C22*Dz^2)*(s0 - s1))/Ds^2)           ((s0 - ...
            s1)*(2*C25*Dz*(Dy^2 + Dz^2) + 2*C22*Ds*Dz*(-(Dz*y0) + Dy*z0) + ...
            C33*Dy*(Dy^2*(s0 - s1) - 2*Ds*Dy*y0 + Dz*(Dz*s0 - Dz*s1 - ...
            2*Ds*z0))))/(2*Ds^3)           (Dz*(s0 - s1)*(-(Dy*(3*C24*Dz + C12*Dy*(s0 - ...
            s1))*(s0 - s1)) + 3*Ds*(2*C24*Dz + C12*Dy*(s0 - s1))*y0 - ...
            3*C12*Ds^2*y0^2))/(6*Ds^3)           (Dz*(s0 - s1)*(Dz*(s0 - s1)*(3*C24*Dy + ...
            C12*Dz*(-s0 + s1)) - 3*Ds*(2*C24*Dy + C12*Dz*(-s0 + s1))*z0 - ...
            3*C12*Ds^2*z0^2))/(6*Ds^3)           -(Dz*(s0 - s1)*(C12*Dz*(s0 - s1)*(2*Dy*(s0 ...
            - s1) - 3*Ds*y0) + 3*C12*Ds*(Dy*(-s0 + s1) + 2*Ds*y0)*z0 + ...
            3*C24*(Dy^2*(-s0 + s1) + 2*Ds*Dy*y0 + Dz*(Dz*s0 - Dz*s1 - ...
            2*Ds*z0))))/(6*Ds^3);

            ((s0 - s1)*(C15*(Dy^2 + Dz^2) + C12*Ds*(-(Dz*y0) + Dy*z0)))/Ds^2           ((s0 ...
            - s1)*(2*C45*Dy*(Dy^2 + Dz^2) - C15*(Dy^2 + Dz^2)*(Dz*s0 - Dz*s1 - ...
            2*Ds*z0) + Ds*(2*C24*Dy - C12*Dz*s0 + C12*Dz*s1 + ...
            2*C12*Ds*z0)*(-(Dz*y0) + Dy*z0)))/(2*Ds^3)           -((s0 - ...
            s1)*(2*C45*Dz*(Dy^2 + Dz^2) + C15*(Dy^2 + Dz^2)*(Dy*s0 - Dy*s1 - ...
            2*Ds*y0) + Ds*(-2*C24*Dz - C12*Dy*s0 + C12*Dy*s1 + ...
            2*C12*Ds*y0)*(Dz*y0 - Dy*z0)))/(2*Ds^3)           ((s0 - s1)*(2*C25*Dy*(Dy^2 + ...
            Dz^2) + 2*C22*Ds*Dy*(-(Dz*y0) + Dy*z0) + C33*Dz*(Dy^2*(-s0 + s1) + ...
            2*Ds*Dy*y0 + Dz*(-(Dz*s0) + Dz*s1 + 2*Ds*z0))))/(2*Ds^3)           ((s0 - ...
            s1)*(2*C25*Dz*(Dy^2 + Dz^2) + 2*C22*Ds*Dz*(-(Dz*y0) + Dy*z0) + ...
            C33*Dy*(Dy^2*(s0 - s1) - 2*Ds*Dy*y0 + Dz*(Dz*s0 - Dz*s1 - ...
            2*Ds*z0))))/(2*Ds^3)           (C55*(Dy^2 + Dz^2)^2*(-s0 + s1) + Ds*(-s0 + ...
            s1)*(-(Dz*y0) + Dy*z0)*(2*C25*(Dy^2 + Dz^2) + C22*Ds*(-(Dz*y0) + ...
            Dy*z0)) + (C33*(-(Ds*Dy*y0 + Ds*Dz*z0)^3 + (Dy^2*(-s0 + s1) + ...
            Ds*Dy*y0 + Dz*(Dz*(-s0 + s1) + Ds*z0))^3))/(3*(Dy^2 + ...
            Dz^2)))/Ds^4           -((s0 - s1)*(-3*C45*Dz*(Dy^2 + Dz^2)*(Dy*(s0 - s1) - ...
            2*Ds*y0) - C15*(Dy^2 + Dz^2)*(Dy^2*(s0 - s1)^2 + 3*Ds*Dy*(-s0 + ...
            s1)*y0 + 3*Ds^2*y0^2) - Ds*(Dy*(3*C24*Dz + C12*Dy*(s0 - s1))*(s0 - ...
            s1) - 3*Ds*(2*C24*Dz + C12*Dy*(s0 - s1))*y0 + ...
            3*C12*Ds^2*y0^2)*(-(Dz*y0) + Dy*z0)))/(6*Ds^4)           -((s0 - ...
            s1)*(3*C45*Dy*(Dy^2 + Dz^2)*(Dz*(s0 - s1) - 2*Ds*z0) - C15*(Dy^2 + ...
            Dz^2)*(Dz^2*(s0 - s1)^2 + 3*Ds*Dz*(-s0 + s1)*z0 + 3*Ds^2*z0^2) + ...
            Ds*(Dz*y0 - Dy*z0)*(Dz*(-3*C24*Dy + C12*Dz*(s0 - s1))*(s0 - s1) + ...
            3*Ds*(2*C24*Dy + C12*Dz*(-s0 + s1))*z0 + ...
            3*C12*Ds^2*z0^2)))/(6*Ds^4)           -((s0 - s1)*(-((Dy*(s0 - s1)*(2*Dz*(s0 - ...
            s1) - 3*Ds*z0) + 3*Ds*y0*(Dz*(-s0 + s1) + 2*Ds*z0))*(C15*(Dy^2 + ...
            Dz^2) + C12*Ds*(-(Dz*y0) + Dy*z0))) + 3*(Dy^2*(s0 - s1) - 2*Ds*Dy*y0 ...
            + Dz*(Dz*(-s0 + s1) + 2*Ds*z0))*(C45*(Dy^2 + Dz^2) + C24*Ds*(-(Dz*y0) ...
            + Dy*z0))))/(6*Ds^4);

            ((s0 - s1)*(-(Dy*(3*C14*Dz + C11*Dy*(s0 - s1))*(s0 - s1)) + ...
            3*Ds*(2*C14*Dz + C11*Dy*(s0 - s1))*y0 - ...
            3*C11*Ds^2*y0^2))/(6*Ds^2)           ((s0 - s1)*(12*C44*Dy*Dz*(Dy*(-s0 + s1) + ...
            2*Ds*y0) + C11*Dz*(s0 - s1)*(3*Dy^2*(s0 - s1)^2 + 8*Ds*Dy*(-s0 + ...
            s1)*y0 + 6*Ds^2*y0^2) - 4*C11*Ds*(Dy^2*(s0 - s1)^2 + 3*Ds*Dy*(-s0 + ...
            s1)*y0 + 3*Ds^2*y0^2)*z0 + 4*C14*(-(Dy^3*(s0 - s1)^2) + 3*Ds*Dy^2*(s0 ...
            - s1)*y0 + 3*Ds*Dz*y0*(-(Dz*s0) + Dz*s1 + 2*Ds*z0) + Dy*(-3*Ds^2*y0^2 ...
            + Dz*(s0 - s1)*(2*Dz*s0 - 2*Dz*s1 - 3*Ds*z0)))))/(24*Ds^3)           ((s0 - ...
            s1)*(Dy*(4*C44*Dz^2 + Dy*(4*C14*Dz + C11*Dy*(s0 - s1))*(s0 - s1))*(s0 ...
            - s1) - 4*Ds*(2*C44*Dz^2 + Dy*(3*C14*Dz + C11*Dy*(s0 - s1))*(s0 - ...
            s1))*y0 + 6*Ds^2*(2*C14*Dz + C11*Dy*(s0 - s1))*y0^2 - ...
            4*C11*Ds^3*y0^3))/(8*Ds^3)           (Dy*(s0 - s1)*(-(Dy*(3*C24*Dz + C12*Dy*(s0 ...
            - s1))*(s0 - s1)) + 3*Ds*(2*C24*Dz + C12*Dy*(s0 - s1))*y0 - ...
            3*C12*Ds^2*y0^2))/(6*Ds^3)           (Dz*(s0 - s1)*(-(Dy*(3*C24*Dz + C12*Dy*(s0 ...
            - s1))*(s0 - s1)) + 3*Ds*(2*C24*Dz + C12*Dy*(s0 - s1))*y0 - ...
            3*C12*Ds^2*y0^2))/(6*Ds^3)           -((s0 - s1)*(-3*C45*Dz*(Dy^2 + ...
            Dz^2)*(Dy*(s0 - s1) - 2*Ds*y0) - C15*(Dy^2 + Dz^2)*(Dy^2*(s0 - s1)^2 ...
            + 3*Ds*Dy*(-s0 + s1)*y0 + 3*Ds^2*y0^2) - Ds*(Dy*(3*C24*Dz + ...
            C12*Dy*(s0 - s1))*(s0 - s1) - 3*Ds*(2*C24*Dz + C12*Dy*(s0 - s1))*y0 + ...
            3*C12*Ds^2*y0^2)*(-(Dz*y0) + Dy*z0)))/(6*Ds^4)           ((s0 - ...
            s1)*(-(Dy^2*(20*C44*Dz^2 + 3*Dy*(5*C14*Dz + C11*Dy*(s0 - s1))*(s0 - ...
            s1))*(s0 - s1)^2) + 15*Ds*Dy*(4*C44*Dz^2 + Dy*(4*C14*Dz + C11*Dy*(s0 ...
            - s1))*(s0 - s1))*(s0 - s1)*y0 - 30*Ds^2*(2*C44*Dz^2 + Dy*(3*C14*Dz + ...
            C11*Dy*(s0 - s1))*(s0 - s1))*y0^2 + 30*Ds^3*(2*C14*Dz + C11*Dy*(s0 - ...
            s1))*y0^3 - 15*C11*Ds^4*y0^4))/(60*Ds^4)           ((s0 - s1)*(5*C14*(Dz*(s0 - ...
            s1)*(3*Dy*(Dy - Dz)*(Dy + Dz)*(s0 - s1)^2 + 4*Ds*(-2*Dy^2 + Dz^2)*(s0 ...
            - s1)*y0 + 6*Ds^2*Dy*y0^2) - 4*Ds*(Dy*(Dy^2 - 2*Dz^2)*(s0 - s1)^2 - ...
            3*Ds*(Dy - Dz)*(Dy + Dz)*(s0 - s1)*y0 + 3*Ds^2*Dy*y0^2)*z0 + ...
            6*Ds^2*Dz*(-(Dy*s0) + Dy*s1 + 2*Ds*y0)*z0^2) + C11*(Dz^2*(s0 - ...
            s1)^2*(-6*Dy^2*(s0 - s1)^2 + 15*Ds*Dy*(s0 - s1)*y0 - 10*Ds^2*y0^2) + ...
            5*Ds*Dz*(s0 - s1)*(3*Dy^2*(s0 - s1)^2 + 8*Ds*Dy*(-s0 + s1)*y0 + ...
            6*Ds^2*y0^2)*z0 - 10*Ds^2*(Dy^2*(s0 - s1)^2 + 3*Ds*Dy*(-s0 + s1)*y0 + ...
            3*Ds^2*y0^2)*z0^2) + 20*C44*Dy*Dz*(Dy*(s0 - s1)*(2*Dz*s0 - 2*Dz*s1 - ...
            3*Ds*z0) + 3*Ds*y0*(-(Dz*s0) + Dz*s1 + 2*Ds*z0))))/(120*Ds^4)           ((s0 - ...
            s1)*(20*C44*Dz*(2*Dy^3*(s0 - s1)^2 + 6*Ds*Dy^2*(-s0 + s1)*y0 - ...
            3*Ds*Dz*y0*(-(Dz*s0) + Dz*s1 + 2*Ds*z0) + Dy*(6*Ds^2*y0^2 + Dz*(s0 - ...
            s1)*(-2*Dz*s0 + 2*Dz*s1 + 3*Ds*z0))) + 3*(C11*(-(Dy^3*(s0 - ...
            s1)^3*(4*Dz*s0 - 4*Dz*s1 - 5*Ds*z0)) - 10*Ds^3*y0^3*(-(Dz*s0) + Dz*s1 ...
            + 2*Ds*z0) + 10*Ds^2*Dy*(s0 - s1)*y0^2*(-2*Dz*s0 + 2*Dz*s1 + 3*Ds*z0) ...
            - 5*Ds*Dy^2*(s0 - s1)^2*y0*(-3*Dz*s0 + 3*Dz*s1 + 4*Ds*z0)) + ...
            5*C14*(Dy^4*(s0 - s1)^3 - 4*Ds*Dy^3*(s0 - s1)^2*y0 + ...
            6*Ds^2*Dz*y0^2*(-(Dz*s0) + Dz*s1 + 2*Ds*z0) - Dy^2*(s0 - ...
            s1)*(-6*Ds^2*y0^2 + Dz*(s0 - s1)*(3*Dz*s0 - 3*Dz*s1 - 4*Ds*z0)) - ...
            4*Ds*Dy*y0*(Ds^2*y0^2 + Dz*(s0 - s1)*(-2*Dz*s0 + 2*Dz*s1 + ...
            3*Ds*z0))))))/(120*Ds^4);

            ((s0 - s1)*(Dz*(s0 - s1)*(3*C14*Dy + C11*Dz*(-s0 + s1)) - ...
            3*Ds*(2*C14*Dy + C11*Dz*(-s0 + s1))*z0 - ...
            3*C11*Ds^2*z0^2))/(6*Ds^2)           ((s0 - s1)*(Dz^2*(-4*C14*Dy + C11*Dz*(s0 - ...
            s1))*(s0 - s1)^2 + 4*Ds*Dz*(s0 - s1)*(3*C14*Dy + C11*Dz*(-s0 + ...
            s1))*z0 - 6*Ds^2*(2*C14*Dy + C11*Dz*(-s0 + s1))*z0^2 - ...
            4*C11*Ds^3*z0^3 + 4*C44*Dy^2*(Dz*(s0 - s1) - 2*Ds*z0)))/(8*Ds^3)           ((s0 ...
            - s1)*(Dz*(s0 - s1)*((4*C14*(-2*Dy^2 + Dz^2) + 3*C11*Dy*Dz*(s0 - ...
            s1))*(s0 - s1) + 4*Ds*(3*C14*Dy + C11*Dz*(-s0 + s1))*y0) - ...
            4*Ds*(-3*C14*(Dy - Dz)*(Dy + Dz)*(s0 - s1) + 6*C14*Ds*Dy*y0 + ...
            C11*Dz*(s0 - s1)*(2*Dy*s0 - 2*Dy*s1 - 3*Ds*y0))*z0 + 6*Ds^2*(2*C14*Dz ...
            + C11*(Dy*s0 - Dy*s1 - 2*Ds*y0))*z0^2 + 12*C44*Dy*Dz*(Dz*(-s0 + s1) + ...
            2*Ds*z0)))/(24*Ds^3)           (Dy*(s0 - s1)*(Dz*(s0 - s1)*(3*C24*Dy + ...
            C12*Dz*(-s0 + s1)) - 3*Ds*(2*C24*Dy + C12*Dz*(-s0 + s1))*z0 - ...
            3*C12*Ds^2*z0^2))/(6*Ds^3)           (Dz*(s0 - s1)*(Dz*(s0 - s1)*(3*C24*Dy + ...
            C12*Dz*(-s0 + s1)) - 3*Ds*(2*C24*Dy + C12*Dz*(-s0 + s1))*z0 - ...
            3*C12*Ds^2*z0^2))/(6*Ds^3)           -((s0 - s1)*(3*C45*Dy*(Dy^2 + ...
            Dz^2)*(Dz*(s0 - s1) - 2*Ds*z0) - C15*(Dy^2 + Dz^2)*(Dz^2*(s0 - s1)^2 ...
            + 3*Ds*Dz*(-s0 + s1)*z0 + 3*Ds^2*z0^2) + Ds*(Dz*y0 - ...
            Dy*z0)*(Dz*(-3*C24*Dy + C12*Dz*(s0 - s1))*(s0 - s1) + 3*Ds*(2*C24*Dy ...
            + C12*Dz*(-s0 + s1))*z0 + 3*C12*Ds^2*z0^2)))/(6*Ds^4)           -((s0 - ...
            s1)*(-5*C14*(Dz*(s0 - s1)*(3*Dy*(Dy - Dz)*(Dy + Dz)*(s0 - s1)^2 + ...
            4*Ds*(-2*Dy^2 + Dz^2)*(s0 - s1)*y0 + 6*Ds^2*Dy*y0^2) - 4*Ds*(Dy*(Dy^2 ...
            - 2*Dz^2)*(s0 - s1)^2 - 3*Ds*(Dy - Dz)*(Dy + Dz)*(s0 - s1)*y0 + ...
            3*Ds^2*Dy*y0^2)*z0 + 6*Ds^2*Dz*(Dy*(-s0 + s1) + 2*Ds*y0)*z0^2) - ...
            20*C44*Dy*Dz*(Dy*(s0 - s1)*(2*Dz*(s0 - s1) - 3*Ds*z0) + ...
            3*Ds*y0*(Dz*(-s0 + s1) + 2*Ds*z0)) + C11*(10*Ds^2*y0^2*(Dz^2*(s0 - ...
            s1)^2 + 3*Ds*Dz*(-s0 + s1)*z0 + 3*Ds^2*z0^2) - 5*Ds*Dy*(s0 - ...
            s1)*y0*(3*Dz^2*(s0 - s1)^2 + 8*Ds*Dz*(-s0 + s1)*z0 + 6*Ds^2*z0^2) + ...
            Dy^2*(s0 - s1)^2*(6*Dz^2*(s0 - s1)^2 + 15*Ds*Dz*(-s0 + s1)*z0 + ...
            10*Ds^2*z0^2))))/(120*Ds^4)           ((s0 - s1)*(-20*C44*Dy^2*(Dz^2*(s0 - ...
            s1)^2 + 3*Ds*Dz*(-s0 + s1)*z0 + 3*Ds^2*z0^2) + 3*(Dz^3*(s0 - ...
            s1)^3*(5*C14*Dy + C11*Dz*(-s0 + s1)) + 5*Ds*Dz^2*(-4*C14*Dy + ...
            C11*Dz*(s0 - s1))*(s0 - s1)^2*z0 + 10*Ds^2*Dz*(s0 - s1)*(3*C14*Dy + ...
            C11*Dz*(-s0 + s1))*z0^2 - 10*Ds^3*(2*C14*Dy + C11*Dz*(-s0 + s1))*z0^3 ...
            - 5*C11*Ds^4*z0^4)))/(60*Ds^4)           ((s0 - s1)*(-20*C44*Dy*(Dz*(s0 - ...
            s1)*(2*(Dy - Dz)*(Dy + Dz)*(s0 - s1) - 3*Ds*Dy*y0) + 3*Ds*(-((Dy^2 - ...
            2*Dz^2)*(s0 - s1)) + 2*Ds*Dy*y0)*z0 - 6*Ds^2*Dz*z0^2) - ...
            3*(5*C14*(Dz^2*(s0 - s1)^2*((-3*Dy^2 + Dz^2)*(s0 - s1) + 4*Ds*Dy*y0) ...
            - 4*Ds*Dz*(s0 - s1)*((-2*Dy^2 + Dz^2)*(s0 - s1) + 3*Ds*Dy*y0)*z0 + ...
            6*Ds^2*(-((Dy - Dz)*(Dy + Dz)*(s0 - s1)) + 2*Ds*Dy*y0)*z0^2 - ...
            4*Ds^3*Dz*z0^3) + C11*(Dz^3*(s0 - s1)^3*(4*Dy*(s0 - s1) - 5*Ds*y0) + ...
            5*Ds*Dz^2*(s0 - s1)^2*(3*Dy*(-s0 + s1) + 4*Ds*y0)*z0 - 10*Ds^2*Dz*(s0 ...
            - s1)*(2*Dy*(-s0 + s1) + 3*Ds*y0)*z0^2 + 10*Ds^3*(Dy*(-s0 + s1) + ...
            2*Ds*y0)*z0^3))))/(120*Ds^4);

            -((s0 - s1)*(C11*Dz*(s0 - s1)*(2*Dy*(s0 - s1) - 3*Ds*y0) + ...
            3*C11*Ds*(Dy*(-s0 + s1) + 2*Ds*y0)*z0 + 3*C14*(Dy^2*(-s0 + s1) + ...
            2*Ds*Dy*y0 + Dz*(Dz*s0 - Dz*s1 - 2*Ds*z0))))/(6*Ds^2)           ((s0 - ...
            s1)*(Dz*(s0 - s1)*((4*C14*(-2*Dy^2 + Dz^2) + 3*C11*Dy*Dz*(s0 - ...
            s1))*(s0 - s1) + 4*Ds*(3*C14*Dy + C11*Dz*(-s0 + s1))*y0) - ...
            4*Ds*(-3*C14*(Dy - Dz)*(Dy + Dz)*(s0 - s1) + 6*C14*Ds*Dy*y0 + ...
            C11*Dz*(s0 - s1)*(2*Dy*s0 - 2*Dy*s1 - 3*Ds*y0))*z0 + 6*Ds^2*(2*C14*Dz ...
            + C11*(Dy*s0 - Dy*s1 - 2*Ds*y0))*z0^2 + 6*C44*Dy*(Dy^2*(s0 - s1) - ...
            2*Ds*Dy*y0 + Dz*(-(Dz*s0) + Dz*s1 + 2*Ds*z0))))/(12*Ds^3)           -((s0 - ...
            s1)*(C11*Dz*(s0 - s1)*(-3*Dy^2*(s0 - s1)^2 + 8*Ds*Dy*(s0 - s1)*y0 - ...
            6*Ds^2*y0^2) + 4*C11*Ds*(Dy^2*(s0 - s1)^2 + 3*Ds*Dy*(-s0 + s1)*y0 + ...
            3*Ds^2*y0^2)*z0 - 6*C44*Dz*(Dy^2*(-s0 + s1) + 2*Ds*Dy*y0 + Dz*(Dz*s0 ...
            - Dz*s1 - 2*Ds*z0)) + 4*C14*(Dy^3*(s0 - s1)^2 + 3*Ds*Dy^2*(-s0 + ...
            s1)*y0 - 3*Ds*Dz*y0*(-(Dz*s0) + Dz*s1 + 2*Ds*z0) + Dy*(3*Ds^2*y0^2 + ...
            Dz*(s0 - s1)*(-2*Dz*s0 + 2*Dz*s1 + 3*Ds*z0)))))/(12*Ds^3)           -(Dy*(s0 - ...
            s1)*(C12*Dz*(s0 - s1)*(2*Dy*(s0 - s1) - 3*Ds*y0) + 3*C12*Ds*(Dy*(-s0 ...
            + s1) + 2*Ds*y0)*z0 + 3*C24*(Dy^2*(-s0 + s1) + 2*Ds*Dy*y0 + Dz*(Dz*s0 ...
            - Dz*s1 - 2*Ds*z0))))/(6*Ds^3)           -(Dz*(s0 - s1)*(C12*Dz*(s0 - ...
            s1)*(2*Dy*(s0 - s1) - 3*Ds*y0) + 3*C12*Ds*(Dy*(-s0 + s1) + ...
            2*Ds*y0)*z0 + 3*C24*(Dy^2*(-s0 + s1) + 2*Ds*Dy*y0 + Dz*(Dz*s0 - Dz*s1 ...
            - 2*Ds*z0))))/(6*Ds^3)           ((s0 - s1)*(-(Ds*(Dz*y0 - Dy*z0)*(C12*Dz*(s0 - ...
            s1)*(2*Dy*(s0 - s1) - 3*Ds*y0) + 3*C12*Ds*(Dy*(-s0 + s1) + ...
            2*Ds*y0)*z0 + 3*C24*(Dy^2*(-s0 + s1) + 2*Ds*Dy*y0 + Dz*(Dz*s0 - Dz*s1 ...
            - 2*Ds*z0)))) + (Dy^2 + Dz^2)*(C15*Dz*(s0 - s1)*(2*Dy*(s0 - s1) - ...
            3*Ds*y0) + 3*C15*Ds*(Dy*(-s0 + s1) + 2*Ds*y0)*z0 + 3*C45*(Dy^2*(-s0 + ...
            s1) + 2*Ds*Dy*y0 + Dz*(Dz*s0 - Dz*s1 - 2*Ds*z0)))))/(6*Ds^4)           ((s0 - ...
            s1)*(20*C44*Dz*(2*Dy^3*(s0 - s1)^2 + 6*Ds*Dy^2*(-s0 + s1)*y0 - ...
            3*Ds*Dz*y0*(-(Dz*s0) + Dz*s1 + 2*Ds*z0) + Dy*(6*Ds^2*y0^2 + Dz*(s0 - ...
            s1)*(-2*Dz*s0 + 2*Dz*s1 + 3*Ds*z0))) + 3*(C11*(-(Dy^3*(s0 - ...
            s1)^3*(4*Dz*s0 - 4*Dz*s1 - 5*Ds*z0)) - 10*Ds^3*y0^3*(-(Dz*s0) + Dz*s1 ...
            + 2*Ds*z0) + 10*Ds^2*Dy*(s0 - s1)*y0^2*(-2*Dz*s0 + 2*Dz*s1 + 3*Ds*z0) ...
            - 5*Ds*Dy^2*(s0 - s1)^2*y0*(-3*Dz*s0 + 3*Dz*s1 + 4*Ds*z0)) + ...
            5*C14*(Dy^4*(s0 - s1)^3 - 4*Ds*Dy^3*(s0 - s1)^2*y0 + ...
            6*Ds^2*Dz*y0^2*(-(Dz*s0) + Dz*s1 + 2*Ds*z0) - Dy^2*(s0 - ...
            s1)*(-6*Ds^2*y0^2 + Dz*(s0 - s1)*(3*Dz*s0 - 3*Dz*s1 - 4*Ds*z0)) - ...
            4*Ds*Dy*y0*(Ds^2*y0^2 + Dz*(s0 - s1)*(-2*Dz*s0 + 2*Dz*s1 + ...
            3*Ds*z0))))))/(120*Ds^4)           ((s0 - s1)*(-20*C44*Dy*(Dz*(s0 - s1)*(2*(Dy ...
            - Dz)*(Dy + Dz)*(s0 - s1) - 3*Ds*Dy*y0) + 3*Ds*(-((Dy^2 - 2*Dz^2)*(s0 ...
            - s1)) + 2*Ds*Dy*y0)*z0 - 6*Ds^2*Dz*z0^2) - 3*(5*C14*(Dz^2*(s0 - ...
            s1)^2*((-3*Dy^2 + Dz^2)*(s0 - s1) + 4*Ds*Dy*y0) - 4*Ds*Dz*(s0 - ...
            s1)*((-2*Dy^2 + Dz^2)*(s0 - s1) + 3*Ds*Dy*y0)*z0 + 6*Ds^2*(-((Dy - ...
            Dz)*(Dy + Dz)*(s0 - s1)) + 2*Ds*Dy*y0)*z0^2 - 4*Ds^3*Dz*z0^3) + ...
            C11*(Dz^3*(s0 - s1)^3*(4*Dy*(s0 - s1) - 5*Ds*y0) + 5*Ds*Dz^2*(s0 - ...
            s1)^2*(3*Dy*(-s0 + s1) + 4*Ds*y0)*z0 - 10*Ds^2*Dz*(s0 - ...
            s1)*(2*Dy*(-s0 + s1) + 3*Ds*y0)*z0^2 + 10*Ds^3*(Dy*(-s0 + s1) + ...
            2*Ds*y0)*z0^3))))/(120*Ds^4)           -((s0 - s1)*(5*C14*(Dz*(s0 - ...
            s1)*(3*Dy*(-Dy^2 + Dz^2)*(s0 - s1)^2 - 4*Ds*(-2*Dy^2 + Dz^2)*(s0 - ...
            s1)*y0 - 6*Ds^2*Dy*y0^2) + 4*Ds*(Dy*(Dy^2 - 2*Dz^2)*(s0 - s1)^2 - ...
            3*Ds*(Dy - Dz)*(Dy + Dz)*(s0 - s1)*y0 + 3*Ds^2*Dy*y0^2)*z0 - ...
            6*Ds^2*Dz*(-(Dy*s0) + Dy*s1 + 2*Ds*y0)*z0^2) + C11*(Dz^2*(s0 - ...
            s1)^2*(6*Dy^2*(s0 - s1)^2 + 15*Ds*Dy*(-s0 + s1)*y0 + 10*Ds^2*y0^2) - ...
            5*Ds*Dz*(s0 - s1)*(3*Dy^2*(s0 - s1)^2 + 8*Ds*Dy*(-s0 + s1)*y0 + ...
            6*Ds^2*y0^2)*z0 + 10*Ds^2*(Dy^2*(s0 - s1)^2 + 3*Ds*Dy*(-s0 + s1)*y0 + ...
            3*Ds^2*y0^2)*z0^2) + 10*C44*(Dy^4*(s0 - s1)^2 + 3*Ds*Dy^3*(-s0 + ...
            s1)*y0 - 3*Ds*Dy*Dz*y0*(-(Dz*s0) + Dz*s1 + 2*Ds*z0) + Dz^2*(Dz^2*(s0 ...
            - s1)^2 + 3*Ds*Dz*(-s0 + s1)*z0 + 3*Ds^2*z0^2) + Dy^2*(3*Ds^2*y0^2 + ...
            Dz*(s0 - s1)*(-2*Dz*s0 + 2*Dz*s1 + 3*Ds*z0)))))/(30*Ds^4)] + D(:,:,count);
        
              
        J = [-(dYs^2*s0^3)/3 - (dZs^2*s0^3)/3 + (dYs^2*s1^3)/3 + (dZs^2*s1^3)/3 - dYs*s0^2*y0 + dYs*s1^2*y0 - s0*y0^2 + s1*y0^2 - dZs*s0^2*z0 + dZs*s1^2*z0 - s0*z0^2 + s1*z0^2                      0                      0;
            0                      -(dZs^2*s0^3)/3 + (dZs^2*s1^3)/3 - dZs*s0^2*z0 + dZs*s1^2*z0 - s0*z0^2 + s1*z0^2                      ((s0 - s1)*(2*dYs*dZs*(s0^2 + s0*s1 + s1^2) + 3*dZs*(s0 + s1)*y0 + 3*dYs*(s0 + s1)*z0 + 6*y0*z0))/6;
            0                      ((s0 - s1)*(2*dYs*dZs*(s0^2 + s0*s1 + s1^2) + 3*dZs*(s0 + s1)*y0 + 3*dYs*(s0 + s1)*z0 + 6*y0*z0))/6                      -(dYs^2*s0^3)/3 + (dYs^2*s1^3)/3 - dYs*s0^2*y0 + dYs*s1^2*y0 - s0*y0^2 + s1*y0^2] + J;
        
        
        s0 = s1;
    
     end
   
     
    J = thick*J; % thickness integration (ASSUME CONSTANT DENSITY)
    
    m = rhon*s0;       m = dia3(m);

    % MATRIZ DE MASA (SIN INTEGRAR EN X)


    DM(:,:,count) = [  m       I0 ; I0      J  ];
    
                   % section index       name              centroid   sectarea      unitmass
    X.Dinfo(count,:) = { FE.sec{nidx,1}  FE.sec{nidx,4}     [YC ZC]    asect        rhon*s0};
    
    
    if isempty(FE.sec{2*j-1,3})==0
        for ii=1:length(setels)
            el=setels(ii);
            E(el,3) = count;  % Update Element Section ID 
        end
            count = count + 1;  
    else
        disp(strcat('Section  ',FE.sec(2*j-1,2), '  is being calculated but not counting!'))
    end
%     plot(shape(:,1),shape(:,2))
%     axis equal



